{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Desktop\\\\React Assignment\\\\assingment\\\\src\\\\components\\\\posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Card, CardContent, Typography, Link, CircularProgress, Button, Box } from '@mui/material';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedditPosts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const contentRefs = useRef([]);\n  useEffect(() => {\n    fetch('https://www.reddit.com/r/reactjs.json').then(response => response.json()).then(data => {\n      const postsData = data.data.children.map(post => ({\n        title: post.data.title,\n        selftext: post.data.selftext,\n        url: post.data.url,\n        score: post.data.score,\n        expanded: false,\n        showReadMore: false // Initialize showReadMore here\n      }));\n      setPosts(postsData);\n      setLoading(false);\n      contentRefs.current = Array(postsData.length).fill(null);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (contentRefs.current) {\n      contentRefs.current.forEach((ref, index) => {\n        if (ref) {\n          setPosts(prevPosts => {\n            const updatedPosts = [...prevPosts];\n            updatedPosts[index] = {\n              ...updatedPosts[index],\n              showReadMore: ref.scrollHeight > 200\n            }; // Correct way to update nested state\n            return updatedPosts;\n          });\n        }\n      });\n    }\n  }, [posts]);\n  const renderContent = (post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: el => contentRefs.current[index] = el,\n    style: {\n      maxHeight: post.expanded ? 'none' : '200px',\n      overflow: 'hidden',\n      transition: 'max-height 0.3s ease'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      remarkPlugins: [remarkGfm],\n      children: post.selftext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n  const handleReadMore = index => {\n    setPosts(prevPosts => {\n      const updatedPosts = [...prevPosts];\n      updatedPosts[index] = {\n        ...updatedPosts[index],\n        expanded: !updatedPosts[index].expanded\n      }; // Correct way to update nested state\n      return updatedPosts;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: '100vh',\n      bgcolor: '#f0f0f0',\n      padding: 4\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      sx: {\n        fontWeight: 'bold',\n        color: '#333'\n      },\n      children: \"ReactJS Reddit Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          color: '#555',\n          marginBottom: 2\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '80%',\n        maxWidth: '900px'\n      },\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          marginBottom: 2,\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n          borderRadius: '8px'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            padding: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            gutterBottom: true,\n            sx: {\n              fontWeight: '500',\n              color: '#222'\n            },\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selftext\",\n            children: renderContent(post, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              marginTop: 2\n            },\n            children: [post.showReadMore && !post.expanded && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleReadMore(index),\n              variant: \"contained\",\n              color: \"primary\",\n              sx: {\n                marginRight: 2\n              },\n              children: \"Read More\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), post.expanded && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleReadMore(index),\n              variant: \"contained\",\n              color: \"secondary\",\n              sx: {\n                marginRight: 2\n              },\n              children: \"Read Less\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                marginLeft: 2\n              },\n              children: [\"Score: \", post.score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: post.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            sx: {\n              display: 'block',\n              marginTop: 2,\n              color: '#1976d2'\n            },\n            children: \"Go to post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(RedditPosts, \"0dPUeomklbede9AEpSwzABcemO0=\");\n_c = RedditPosts;\nexport default RedditPosts;\nvar _c;\n$RefreshReg$(_c, \"RedditPosts\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Card","CardContent","Typography","Link","CircularProgress","Button","Box","ReactMarkdown","remarkGfm","jsxDEV","_jsxDEV","RedditPosts","_s","posts","setPosts","loading","setLoading","contentRefs","fetch","then","response","json","data","postsData","children","map","post","title","selftext","url","score","expanded","showReadMore","current","Array","length","fill","catch","error","console","forEach","ref","index","prevPosts","updatedPosts","scrollHeight","renderContent","el","style","maxHeight","overflow","transition","remarkPlugins","fileName","_jsxFileName","lineNumber","columnNumber","handleReadMore","sx","display","flexDirection","alignItems","minHeight","bgcolor","padding","variant","component","gutterBottom","fontWeight","color","marginBottom","width","maxWidth","boxShadow","borderRadius","className","marginTop","onClick","marginRight","marginLeft","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/laptop/Desktop/React Assignment/assingment/src/components/posts.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Card, CardContent, Typography, Link, CircularProgress, Button, Box } from '@mui/material';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport '../App.css'\r\n\r\nconst RedditPosts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const contentRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://www.reddit.com/r/reactjs.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const postsData = data.data.children.map((post) => ({\r\n          title: post.data.title,\r\n          selftext: post.data.selftext,\r\n          url: post.data.url,\r\n          score: post.data.score,\r\n          expanded: false,\r\n          showReadMore: false, // Initialize showReadMore here\r\n        }));\r\n        setPosts(postsData);\r\n        setLoading(false);\r\n        contentRefs.current = Array(postsData.length).fill(null);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (contentRefs.current) {\r\n      contentRefs.current.forEach((ref, index) => {\r\n        if (ref) {\r\n          setPosts(prevPosts => {\r\n            const updatedPosts = [...prevPosts];\r\n            updatedPosts[index] = { ...updatedPosts[index], showReadMore: ref.scrollHeight > 200 }; // Correct way to update nested state\r\n            return updatedPosts;\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [posts]); \r\n\r\n  const renderContent = (post, index) => (\r\n    <div\r\n      ref={(el) => (contentRefs.current[index] = el)}\r\n      style={{\r\n        maxHeight: post.expanded ? 'none' : '200px',\r\n        overflow: 'hidden',\r\n        transition: 'max-height 0.3s ease',\r\n      }}\r\n    >\r\n      <ReactMarkdown remarkPlugins={[remarkGfm]}>{post.selftext}</ReactMarkdown>\r\n    </div>\r\n  );\r\n\r\n  const handleReadMore = (index) => {\r\n    setPosts(prevPosts => {\r\n      const updatedPosts = [...prevPosts];\r\n      updatedPosts[index] = { ...updatedPosts[index], expanded: !updatedPosts[index].expanded }; // Correct way to update nested state\r\n      return updatedPosts;\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', minHeight: '100vh', bgcolor: '#f0f0f0', padding: 4 }}> {/* Use Box for layout and styling */}\r\n    <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ fontWeight: 'bold', color: '#333' }}>\r\n        ReactJS Reddit Posts\r\n    </Typography>\r\n\r\n    {loading ? (\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            <Typography variant=\"h6\" sx={{ color: '#555', marginBottom: 2 }}>Loading...</Typography>\r\n            <CircularProgress />\r\n        </Box>\r\n    ) : (\r\n        <Box sx={{ width: '80%', maxWidth: '900px' }}> \r\n            {posts.map((post, index) => (\r\n                <Card key={index} sx={{ marginBottom: 2, boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)', borderRadius: '8px' }}>\r\n                    <CardContent sx={{ padding: 3 }}>\r\n                        <Typography variant=\"h5\" component=\"h2\" gutterBottom sx={{ fontWeight: '500', color: '#222' }}>\r\n                            {post.title}\r\n                        </Typography>\r\n\r\n                        <div className=\"selftext\">\r\n                            {renderContent(post, index)}\r\n                        </div>\r\n\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', marginTop: 2 }}> \r\n                            {post.showReadMore && !post.expanded && (\r\n                                <Button onClick={() => handleReadMore(index)} variant=\"contained\" color=\"primary\" sx={{ marginRight: 2 }}>\r\n                                    Read More\r\n                                </Button>\r\n                            )}\r\n\r\n                            {post.expanded && (\r\n                                <Button onClick={() => handleReadMore(index)} variant=\"contained\" color=\"secondary\" sx={{ marginRight: 2 }}>\r\n                                    Read Less\r\n                                </Button>\r\n                            )}\r\n\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ marginLeft: 2 }}>\r\n                                Score: {post.score}\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                        <Link href={post.url} target=\"_blank\" rel=\"noopener noreferrer\" sx={{ display: 'block', marginTop: 2, color: '#1976d2' }}>\r\n                            Go to post\r\n                        </Link>\r\n                    </CardContent>\r\n                </Card>\r\n            ))}\r\n        </Box>\r\n    )}\r\n</Box>\r\n);\r\n};\r\n\r\nexport default RedditPosts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}