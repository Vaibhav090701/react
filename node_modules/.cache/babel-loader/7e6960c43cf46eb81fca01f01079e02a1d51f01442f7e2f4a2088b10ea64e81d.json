{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import{Card,CardContent,Typography,Link,CircularProgress,Button,Box}from'@mui/material';import ReactMarkdown from'react-markdown';import remarkGfm from'remark-gfm';import'../App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RedditPosts=()=>{const[posts,setPosts]=useState([]);const[loading,setLoading]=useState(true);const contentRefs=useRef([]);useEffect(()=>{fetch('https://www.reddit.com/r/reactjs.json').then(response=>response.json()).then(data=>{const postsData=data.data.children.map(post=>({title:post.data.title,selftext:post.data.selftext,url:post.data.url,score:post.data.score,expanded:false,showReadMore:false// Initialize showReadMore here\n}));setPosts(postsData);setLoading(false);contentRefs.current=Array(postsData.length).fill(null);}).catch(error=>{console.error('Error fetching data:',error);setLoading(false);});},[]);useEffect(()=>{if(contentRefs.current){contentRefs.current.forEach((ref,index)=>{if(ref){setPosts(prevPosts=>{const updatedPosts=[...prevPosts];updatedPosts[index]={...updatedPosts[index],showReadMore:ref.scrollHeight>200};// Correct way to update nested state\nreturn updatedPosts;});}});}},[posts]);const renderContent=(post,index)=>/*#__PURE__*/_jsx(\"div\",{ref:el=>contentRefs.current[index]=el,style:{maxHeight:post.expanded?'none':'200px',overflow:'hidden',transition:'max-height 0.3s ease'},children:/*#__PURE__*/_jsx(ReactMarkdown,{remarkPlugins:[remarkGfm],children:post.selftext})});const handleReadMore=index=>{setPosts(prevPosts=>{const updatedPosts=[...prevPosts];updatedPosts[index]={...updatedPosts[index],expanded:!updatedPosts[index].expanded};// Correct way to update nested state\nreturn updatedPosts;});};return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',minHeight:'100vh',bgcolor:'#f0f0f0',padding:4},children:[\" \",/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,sx:{fontWeight:'bold',color:'#333'},children:\"ReactJS Reddit Posts\"}),loading?/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{color:'#555',marginBottom:2},children:\"Loading...\"}),/*#__PURE__*/_jsx(CircularProgress,{})]}):/*#__PURE__*/_jsx(Box,{sx:{width:'80%',maxWidth:'900px'},children:posts.map((post,index)=>/*#__PURE__*/_jsx(Card,{sx:{marginBottom:2,boxShadow:'0 2px 4px rgba(0, 0, 0, 0.1)',borderRadius:'8px'},children:/*#__PURE__*/_jsxs(CardContent,{sx:{padding:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",component:\"h2\",gutterBottom:true,sx:{fontWeight:'500',color:'#222'},children:post.title}),/*#__PURE__*/_jsx(\"div\",{className:\"selftext\",children:renderContent(post,index)}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',marginTop:2},children:[post.showReadMore&&!post.expanded&&/*#__PURE__*/_jsx(Button,{onClick:()=>handleReadMore(index),variant:\"contained\",color:\"primary\",sx:{marginRight:2},children:\"Read More\"}),post.expanded&&/*#__PURE__*/_jsx(Button,{onClick:()=>handleReadMore(index),variant:\"contained\",color:\"secondary\",sx:{marginRight:2},children:\"Read Less\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{marginLeft:2},children:[\"Score: \",post.score]})]}),/*#__PURE__*/_jsx(Link,{href:post.url,target:\"_blank\",rel:\"noopener noreferrer\",sx:{display:'block',marginTop:2,color:'#1976d2'},children:\"Go to post\"})]})},index))})]});};export default RedditPosts;","map":{"version":3,"names":["React","useEffect","useState","useRef","Card","CardContent","Typography","Link","CircularProgress","Button","Box","ReactMarkdown","remarkGfm","jsx","_jsx","jsxs","_jsxs","RedditPosts","posts","setPosts","loading","setLoading","contentRefs","fetch","then","response","json","data","postsData","children","map","post","title","selftext","url","score","expanded","showReadMore","current","Array","length","fill","catch","error","console","forEach","ref","index","prevPosts","updatedPosts","scrollHeight","renderContent","el","style","maxHeight","overflow","transition","remarkPlugins","handleReadMore","sx","display","flexDirection","alignItems","minHeight","bgcolor","padding","variant","component","gutterBottom","fontWeight","color","marginBottom","width","maxWidth","boxShadow","borderRadius","className","marginTop","onClick","marginRight","marginLeft","href","target","rel"],"sources":["C:/Users/laptop/Desktop/React Assignment/assingment/src/components/posts.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Card, CardContent, Typography, Link, CircularProgress, Button, Box } from '@mui/material';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport '../App.css'\r\n\r\nconst RedditPosts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const contentRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://www.reddit.com/r/reactjs.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const postsData = data.data.children.map((post) => ({\r\n          title: post.data.title,\r\n          selftext: post.data.selftext,\r\n          url: post.data.url,\r\n          score: post.data.score,\r\n          expanded: false,\r\n          showReadMore: false, // Initialize showReadMore here\r\n        }));\r\n        setPosts(postsData);\r\n        setLoading(false);\r\n        contentRefs.current = Array(postsData.length).fill(null);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (contentRefs.current) {\r\n      contentRefs.current.forEach((ref, index) => {\r\n        if (ref) {\r\n          setPosts(prevPosts => {\r\n            const updatedPosts = [...prevPosts];\r\n            updatedPosts[index] = { ...updatedPosts[index], showReadMore: ref.scrollHeight > 200 }; // Correct way to update nested state\r\n            return updatedPosts;\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [posts]); \r\n\r\n  const renderContent = (post, index) => (\r\n    <div\r\n      ref={(el) => (contentRefs.current[index] = el)}\r\n      style={{\r\n        maxHeight: post.expanded ? 'none' : '200px',\r\n        overflow: 'hidden',\r\n        transition: 'max-height 0.3s ease',\r\n      }}\r\n    >\r\n      <ReactMarkdown remarkPlugins={[remarkGfm]}>{post.selftext}</ReactMarkdown>\r\n    </div>\r\n  );\r\n\r\n  const handleReadMore = (index) => {\r\n    setPosts(prevPosts => {\r\n      const updatedPosts = [...prevPosts];\r\n      updatedPosts[index] = { ...updatedPosts[index], expanded: !updatedPosts[index].expanded }; // Correct way to update nested state\r\n      return updatedPosts;\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', minHeight: '100vh', bgcolor: '#f0f0f0', padding: 4 }}> {/* Use Box for layout and styling */}\r\n    <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ fontWeight: 'bold', color: '#333' }}>\r\n        ReactJS Reddit Posts\r\n    </Typography>\r\n\r\n    {loading ? (\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            <Typography variant=\"h6\" sx={{ color: '#555', marginBottom: 2 }}>Loading...</Typography>\r\n            <CircularProgress />\r\n        </Box>\r\n    ) : (\r\n        <Box sx={{ width: '80%', maxWidth: '900px' }}> \r\n            {posts.map((post, index) => (\r\n                <Card key={index} sx={{ marginBottom: 2, boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)', borderRadius: '8px' }}>\r\n                    <CardContent sx={{ padding: 3 }}>\r\n                        <Typography variant=\"h5\" component=\"h2\" gutterBottom sx={{ fontWeight: '500', color: '#222' }}>\r\n                            {post.title}\r\n                        </Typography>\r\n\r\n                        <div className=\"selftext\">\r\n                            {renderContent(post, index)}\r\n                        </div>\r\n\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', marginTop: 2 }}> \r\n                            {post.showReadMore && !post.expanded && (\r\n                                <Button onClick={() => handleReadMore(index)} variant=\"contained\" color=\"primary\" sx={{ marginRight: 2 }}>\r\n                                    Read More\r\n                                </Button>\r\n                            )}\r\n\r\n                            {post.expanded && (\r\n                                <Button onClick={() => handleReadMore(index)} variant=\"contained\" color=\"secondary\" sx={{ marginRight: 2 }}>\r\n                                    Read Less\r\n                                </Button>\r\n                            )}\r\n\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ marginLeft: 2 }}>\r\n                                Score: {post.score}\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                        <Link href={post.url} target=\"_blank\" rel=\"noopener noreferrer\" sx={{ display: 'block', marginTop: 2, color: '#1976d2' }}>\r\n                            Go to post\r\n                        </Link>\r\n                    </CardContent>\r\n                </Card>\r\n            ))}\r\n        </Box>\r\n    )}\r\n</Box>\r\n);\r\n};\r\n\r\nexport default RedditPosts;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OAASC,IAAI,CAAEC,WAAW,CAAEC,UAAU,CAAEC,IAAI,CAAEC,gBAAgB,CAAEC,MAAM,CAAEC,GAAG,KAAQ,eAAe,CAClG,MAAO,CAAAC,aAAa,KAAM,gBAAgB,CAC1C,MAAO,CAAAC,SAAS,KAAM,YAAY,CAClC,MAAO,YAAY,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACkB,OAAO,CAAEC,UAAU,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAAoB,WAAW,CAAGnB,MAAM,CAAC,EAAE,CAAC,CAE9BF,SAAS,CAAC,IAAM,CACdsB,KAAK,CAAC,uCAAuC,CAAC,CAC3CC,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,EAAK,CACd,KAAM,CAAAC,SAAS,CAAGD,IAAI,CAACA,IAAI,CAACE,QAAQ,CAACC,GAAG,CAAEC,IAAI,GAAM,CAClDC,KAAK,CAAED,IAAI,CAACJ,IAAI,CAACK,KAAK,CACtBC,QAAQ,CAAEF,IAAI,CAACJ,IAAI,CAACM,QAAQ,CAC5BC,GAAG,CAAEH,IAAI,CAACJ,IAAI,CAACO,GAAG,CAClBC,KAAK,CAAEJ,IAAI,CAACJ,IAAI,CAACQ,KAAK,CACtBC,QAAQ,CAAE,KAAK,CACfC,YAAY,CAAE,KAAO;AACvB,CAAC,CAAC,CAAC,CACHlB,QAAQ,CAACS,SAAS,CAAC,CACnBP,UAAU,CAAC,KAAK,CAAC,CACjBC,WAAW,CAACgB,OAAO,CAAGC,KAAK,CAACX,SAAS,CAACY,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAC1D,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CtB,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAENpB,SAAS,CAAC,IAAM,CACd,GAAIqB,WAAW,CAACgB,OAAO,CAAE,CACvBhB,WAAW,CAACgB,OAAO,CAACO,OAAO,CAAC,CAACC,GAAG,CAAEC,KAAK,GAAK,CAC1C,GAAID,GAAG,CAAE,CACP3B,QAAQ,CAAC6B,SAAS,EAAI,CACpB,KAAM,CAAAC,YAAY,CAAG,CAAC,GAAGD,SAAS,CAAC,CACnCC,YAAY,CAACF,KAAK,CAAC,CAAG,CAAE,GAAGE,YAAY,CAACF,KAAK,CAAC,CAAEV,YAAY,CAAES,GAAG,CAACI,YAAY,CAAG,GAAI,CAAC,CAAE;AACxF,MAAO,CAAAD,YAAY,CACrB,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAAC/B,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAiC,aAAa,CAAGA,CAACpB,IAAI,CAAEgB,KAAK,gBAChCjC,IAAA,QACEgC,GAAG,CAAGM,EAAE,EAAM9B,WAAW,CAACgB,OAAO,CAACS,KAAK,CAAC,CAAGK,EAAI,CAC/CC,KAAK,CAAE,CACLC,SAAS,CAAEvB,IAAI,CAACK,QAAQ,CAAG,MAAM,CAAG,OAAO,CAC3CmB,QAAQ,CAAE,QAAQ,CAClBC,UAAU,CAAE,sBACd,CAAE,CAAA3B,QAAA,cAEFf,IAAA,CAACH,aAAa,EAAC8C,aAAa,CAAE,CAAC7C,SAAS,CAAE,CAAAiB,QAAA,CAAEE,IAAI,CAACE,QAAQ,CAAgB,CAAC,CACvE,CACN,CAED,KAAM,CAAAyB,cAAc,CAAIX,KAAK,EAAK,CAChC5B,QAAQ,CAAC6B,SAAS,EAAI,CACpB,KAAM,CAAAC,YAAY,CAAG,CAAC,GAAGD,SAAS,CAAC,CACnCC,YAAY,CAACF,KAAK,CAAC,CAAG,CAAE,GAAGE,YAAY,CAACF,KAAK,CAAC,CAAEX,QAAQ,CAAE,CAACa,YAAY,CAACF,KAAK,CAAC,CAACX,QAAS,CAAC,CAAE;AAC3F,MAAO,CAAAa,YAAY,CACrB,CAAC,CAAC,CACJ,CAAC,CAGD,mBACEjC,KAAA,CAACN,GAAG,EAACiD,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,aAAa,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAQ,CAAEC,SAAS,CAAE,OAAO,CAAEC,OAAO,CAAE,SAAS,CAAEC,OAAO,CAAE,CAAE,CAAE,CAAApC,QAAA,EAAC,GAAC,cAClIf,IAAA,CAACR,UAAU,EAAC4D,OAAO,CAAC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,YAAY,MAACT,EAAE,CAAE,CAAEU,UAAU,CAAE,MAAM,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAAzC,QAAA,CAAC,sBAEhG,CAAY,CAAC,CAEZT,OAAO,cACJJ,KAAA,CAACN,GAAG,EAACiD,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,aAAa,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAS,CAAE,CAAAjC,QAAA,eACxEf,IAAA,CAACR,UAAU,EAAC4D,OAAO,CAAC,IAAI,CAACP,EAAE,CAAE,CAAEW,KAAK,CAAE,MAAM,CAAEC,YAAY,CAAE,CAAE,CAAE,CAAA1C,QAAA,CAAC,YAAU,CAAY,CAAC,cACxFf,IAAA,CAACN,gBAAgB,GAAE,CAAC,EACnB,CAAC,cAENM,IAAA,CAACJ,GAAG,EAACiD,EAAE,CAAE,CAAEa,KAAK,CAAE,KAAK,CAAEC,QAAQ,CAAE,OAAQ,CAAE,CAAA5C,QAAA,CACxCX,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,CAAEgB,KAAK,gBACnBjC,IAAA,CAACV,IAAI,EAAauD,EAAE,CAAE,CAAEY,YAAY,CAAE,CAAC,CAAEG,SAAS,CAAE,8BAA8B,CAAEC,YAAY,CAAE,KAAM,CAAE,CAAA9C,QAAA,cACtGb,KAAA,CAACX,WAAW,EAACsD,EAAE,CAAE,CAAEM,OAAO,CAAE,CAAE,CAAE,CAAApC,QAAA,eAC5Bf,IAAA,CAACR,UAAU,EAAC4D,OAAO,CAAC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,YAAY,MAACT,EAAE,CAAE,CAAEU,UAAU,CAAE,KAAK,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAAzC,QAAA,CACzFE,IAAI,CAACC,KAAK,CACH,CAAC,cAEblB,IAAA,QAAK8D,SAAS,CAAC,UAAU,CAAA/C,QAAA,CACpBsB,aAAa,CAACpB,IAAI,CAAEgB,KAAK,CAAC,CAC1B,CAAC,cAEN/B,KAAA,CAACN,GAAG,EAACiD,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEE,UAAU,CAAE,QAAQ,CAAEe,SAAS,CAAE,CAAE,CAAE,CAAAhD,QAAA,EAC5DE,IAAI,CAACM,YAAY,EAAI,CAACN,IAAI,CAACK,QAAQ,eAChCtB,IAAA,CAACL,MAAM,EAACqE,OAAO,CAAEA,CAAA,GAAMpB,cAAc,CAACX,KAAK,CAAE,CAACmB,OAAO,CAAC,WAAW,CAACI,KAAK,CAAC,SAAS,CAACX,EAAE,CAAE,CAAEoB,WAAW,CAAE,CAAE,CAAE,CAAAlD,QAAA,CAAC,WAE1G,CAAQ,CACX,CAEAE,IAAI,CAACK,QAAQ,eACVtB,IAAA,CAACL,MAAM,EAACqE,OAAO,CAAEA,CAAA,GAAMpB,cAAc,CAACX,KAAK,CAAE,CAACmB,OAAO,CAAC,WAAW,CAACI,KAAK,CAAC,WAAW,CAACX,EAAE,CAAE,CAAEoB,WAAW,CAAE,CAAE,CAAE,CAAAlD,QAAA,CAAC,WAE5G,CAAQ,CACX,cAEDb,KAAA,CAACV,UAAU,EAAC4D,OAAO,CAAC,OAAO,CAACI,KAAK,CAAC,gBAAgB,CAACX,EAAE,CAAE,CAAEqB,UAAU,CAAE,CAAE,CAAE,CAAAnD,QAAA,EAAC,SAC/D,CAACE,IAAI,CAACI,KAAK,EACV,CAAC,EACZ,CAAC,cAENrB,IAAA,CAACP,IAAI,EAAC0E,IAAI,CAAElD,IAAI,CAACG,GAAI,CAACgD,MAAM,CAAC,QAAQ,CAACC,GAAG,CAAC,qBAAqB,CAACxB,EAAE,CAAE,CAAEC,OAAO,CAAE,OAAO,CAAEiB,SAAS,CAAE,CAAC,CAAEP,KAAK,CAAE,SAAU,CAAE,CAAAzC,QAAA,CAAC,YAE1H,CAAM,CAAC,EACE,CAAC,EA/BPkB,KAgCL,CACT,CAAC,CACD,CACR,EACA,CAAC,CAEN,CAAC,CAED,cAAe,CAAA9B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}