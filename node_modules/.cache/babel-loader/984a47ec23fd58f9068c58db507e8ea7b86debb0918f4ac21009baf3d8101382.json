{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Desktop\\\\React Assignment\\\\assingment\\\\src\\\\components\\\\posts.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Card, CardContent, Typography, Link, CircularProgress, Button } from '@mui/material';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedditPosts = () => {\n  var _s = $RefreshSig$();\n  // ... (rest of the code is the same)\n\n  const renderContent = (post, index) => {\n    _s();\n    // Add index here\n    const contentRef = useRef(null); // Ref for content element\n\n    useEffect(() => {\n      if (contentRef.current) {\n        setPosts(prevPosts => {\n          const updatedPosts = [...prevPosts];\n          updatedPosts[index].showReadMore = contentRef.current.scrollHeight > 200; // Check rendered height\n          return updatedPosts;\n        });\n      }\n    }, [post.selftext, index]); // Re-run effect when selftext changes\n\n    if (post.selftext) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: contentRef,\n        children: [\" \", /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          remarkPlugins: [remarkGfm],\n          children: post.selftext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No content available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  };\n  _s(renderContent, \"4DWJwh4NdgM1uDLuR5KKKiIo21Q=\");\n  const handleReadMore = index => {\n    setPosts(prevPosts => {\n      const updatedPosts = [...prevPosts];\n      updatedPosts[index].expanded = !updatedPosts[index].expanded;\n      updatedPosts[index].cardHeight = updatedPosts[index].expanded ? 'auto' : '200px';\n      return updatedPosts;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selftext\",\n      children: [renderContent(post, index), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), post.showReadMore &&\n    /*#__PURE__*/\n    // Use showReadMore state\n    _jsxDEV(Button, {\n      onClick: () => handleReadMore(index),\n      children: post.expanded ? \"Read Less\" : \"Read More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = RedditPosts;\nexport default RedditPosts;\nvar _c;\n$RefreshReg$(_c, \"RedditPosts\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Card","CardContent","Typography","Link","CircularProgress","Button","ReactMarkdown","remarkGfm","jsxDEV","_jsxDEV","RedditPosts","_s","$RefreshSig$","renderContent","post","index","contentRef","current","setPosts","prevPosts","updatedPosts","showReadMore","scrollHeight","selftext","ref","children","remarkPlugins","fileName","_jsxFileName","lineNumber","columnNumber","handleReadMore","expanded","cardHeight","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/laptop/Desktop/React Assignment/assingment/src/components/posts.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Card, CardContent, Typography, Link, CircularProgress, Button } from '@mui/material';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport '../App.css';\r\n\r\nconst RedditPosts = () => {\r\n  // ... (rest of the code is the same)\r\n\r\n  const renderContent = (post, index) => { // Add index here\r\n    const contentRef = useRef(null); // Ref for content element\r\n\r\n    useEffect(() => {\r\n      if (contentRef.current) {\r\n        setPosts((prevPosts) => {\r\n          const updatedPosts = [...prevPosts];\r\n          updatedPosts[index].showReadMore = contentRef.current.scrollHeight > 200; // Check rendered height\r\n          return updatedPosts;\r\n        });\r\n      }\r\n    }, [post.selftext, index]); // Re-run effect when selftext changes\r\n\r\n    if (post.selftext) {\r\n      return (\r\n        <div ref={contentRef}> {/* Add ref here */}\r\n          <ReactMarkdown remarkPlugins={[remarkGfm]}>{post.selftext}</ReactMarkdown>\r\n        </div>\r\n      );\r\n    }\r\n    return <p>No content available.</p>;\r\n  };\r\n\r\n  const handleReadMore = (index) => {\r\n    setPosts((prevPosts) => {\r\n      const updatedPosts = [...prevPosts];\r\n      updatedPosts[index].expanded = !updatedPosts[index].expanded;\r\n      updatedPosts[index].cardHeight = updatedPosts[index].expanded ? 'auto' : '200px';\r\n      return updatedPosts;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* ... (rest of the JSX is the same) */}\r\n          <div className=\"selftext\">\r\n            {renderContent(post, index)} {/* Pass index to renderContent */}\r\n          </div>\r\n\r\n          {post.showReadMore && ( // Use showReadMore state\r\n            <Button onClick={() => handleReadMore(index)}>\r\n              {post.expanded ? \"Read Less\" : \"Read More\"}\r\n            </Button>\r\n          )}\r\n      {/* ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedditPosts;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,IAAI,EAAEC,gBAAgB,EAAEC,MAAM,QAAQ,eAAe;AAC7F,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACxB;;EAEA,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IAAAJ,EAAA;IAAE;IACvC,MAAMK,UAAU,GAAGjB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEjCF,SAAS,CAAC,MAAM;MACd,IAAImB,UAAU,CAACC,OAAO,EAAE;QACtBC,QAAQ,CAAEC,SAAS,IAAK;UACtB,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,CAAC;UACnCC,YAAY,CAACL,KAAK,CAAC,CAACM,YAAY,GAAGL,UAAU,CAACC,OAAO,CAACK,YAAY,GAAG,GAAG,CAAC,CAAC;UAC1E,OAAOF,YAAY;QACrB,CAAC,CAAC;MACJ;IACF,CAAC,EAAE,CAACN,IAAI,CAACS,QAAQ,EAAER,KAAK,CAAC,CAAC,CAAC,CAAC;;IAE5B,IAAID,IAAI,CAACS,QAAQ,EAAE;MACjB,oBACEd,OAAA;QAAKe,GAAG,EAAER,UAAW;QAAAS,QAAA,GAAC,GAAC,eACrBhB,OAAA,CAACH,aAAa;UAACoB,aAAa,EAAE,CAACnB,SAAS,CAAE;UAAAkB,QAAA,EAAEX,IAAI,CAACS;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC;IAEV;IACA,oBAAOrB,OAAA;MAAAgB,QAAA,EAAG;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrC,CAAC;EAACnB,EAAA,CArBIE,aAAa;EAuBnB,MAAMkB,cAAc,GAAIhB,KAAK,IAAK;IAChCG,QAAQ,CAAEC,SAAS,IAAK;MACtB,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,CAAC;MACnCC,YAAY,CAACL,KAAK,CAAC,CAACiB,QAAQ,GAAG,CAACZ,YAAY,CAACL,KAAK,CAAC,CAACiB,QAAQ;MAC5DZ,YAAY,CAACL,KAAK,CAAC,CAACkB,UAAU,GAAGb,YAAY,CAACL,KAAK,CAAC,CAACiB,QAAQ,GAAG,MAAM,GAAG,OAAO;MAChF,OAAOZ,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEX,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAT,QAAA,gBAEpBhB,OAAA;MAAKyB,SAAS,EAAC,UAAU;MAAAT,QAAA,GACtBZ,aAAa,CAACC,IAAI,EAAEC,KAAK,CAAC,EAAC,GAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EAELhB,IAAI,CAACO,YAAY;IAAA;IAAM;IACtBZ,OAAA,CAACJ,MAAM;MAAC8B,OAAO,EAAEA,CAAA,KAAMJ,cAAc,CAAChB,KAAK,CAAE;MAAAU,QAAA,EAC1CX,IAAI,CAACkB,QAAQ,GAAG,WAAW,GAAG;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEV,CAAC;AAACM,EAAA,GAlDI1B,WAAW;AAoDjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}