{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Desktop\\\\React Assignment\\\\assingment\\\\src\\\\components\\\\posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, Typography, Link, Grid, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedditPosts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch Reddit data\n    fetch('https://www.reddit.com/r/reactjs.json').then(response => response.json()).then(data => {\n      const postsData = data.data.children.map(post => ({\n        title: post.data.title,\n        selftext_html: post.data.selftext_html,\n        url: post.data.url,\n        score: post.data.score\n      }));\n      setPosts(postsData);\n      setLoading(false); // Data fetched, stop loading\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setLoading(false); // Stop loading in case of error\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) // Show a loading spinner while fetching\n    : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h2\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: post.selftext_html\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: post.url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Read more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Score: \", post.score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(RedditPosts, \"RbKeE0iIFzYv1PT2nn3dHnXn06o=\");\n_c = RedditPosts;\nexport default RedditPosts;\nvar _c;\n$RefreshReg$(_c, \"RedditPosts\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","Typography","Link","Grid","CircularProgress","jsxDEV","_jsxDEV","RedditPosts","_s","posts","setPosts","loading","setLoading","fetch","then","response","json","data","postsData","children","map","post","title","selftext_html","url","score","catch","error","console","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","index","item","xs","sm","md","variant","component","dangerouslySetInnerHTML","__html","href","target","rel","color","_c","$RefreshReg$"],"sources":["C:/Users/laptop/Desktop/React Assignment/assingment/src/components/posts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, CardContent, Typography, Link, Grid, CircularProgress } from '@mui/material';\r\n\r\nconst RedditPosts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch Reddit data\r\n    fetch('https://www.reddit.com/r/reactjs.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const postsData = data.data.children.map((post) => ({\r\n          title: post.data.title,\r\n          selftext_html: post.data.selftext_html,\r\n          url: post.data.url,\r\n          score: post.data.score,\r\n        }));\r\n        setPosts(postsData);\r\n        setLoading(false); // Data fetched, stop loading\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false); // Stop loading in case of error\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      {loading ? (\r\n        <CircularProgress /> // Show a loading spinner while fetching\r\n      ) : (\r\n        <Grid container spacing={3}>\r\n          {posts.map((post, index) => (\r\n            <Grid item xs={12} sm={6} md={4} key={index}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" component=\"h2\">\r\n                    {post.title}\r\n                  </Typography>\r\n                  <div\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.selftext_html,\r\n                    }}\r\n                  />\r\n                  <Link href={post.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    Read more\r\n                  </Link>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    Score: {post.score}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedditPosts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}